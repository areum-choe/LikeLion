# -*- coding: utf-8 -*-
"""210629_class_folium

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1feRA0ZfcJbAyQ1wSFJVgLokXCbWGlTNA

### Folium
"""

import folium

loc=folium.Map()
loc

loc=folium.Map(location=[37.44114338613219, 127.14746608257532],
               zoom_start=15)
loc

loc.save('map.html')

import os
path = os.getcwd()
os.listdir(path)

#37.54723224345838, 126.91589094209439 #성산중
#37.546424133850195, 126.91138483101828  #서울유니온교회
loc = folium.Map(location=[37.54723224345838, 126.91589094209439], zoom_start=16)
folium.Marker([37.54723224345838, 126.91589094209439]).add_to(loc) # 성산중학교
folium.Marker([37.546424133850195, 126.91138483101828]).add_to(loc) #서울유니온교회
loc

m = folium.Map(
location=[37.54723224345838, 126.91589094209439],
zoom_start=15
)
folium.Marker(
location=[37.54723224345838, 126.91589094209439],
popup = '성산중', # 선택 시 popup
icon = folium.Icon(color='purple', icon="info-sign") # 아이콘 # glyphicon-check, star
).add_to(m)
m

"""### 나의 맛집 리스트 5군데 추가하기"""

#판교역 맛집
Pangyo = folium.Map(location=[37.39492940686156, 127.11124582859581], zoom_start=16)
Pangyo
folium.Marker(
location=[37.3977541650208, 127.11369012859592],
tooltip = '후라토', # 선택 시 popup
icon = folium.Icon(color='purple', icon="info-sign") 
).add_to(Pangyo)

folium.Marker(
location=[37.39865753684916, 127.111382812647042],
tooltip = '인생곱창', # 선택 시 popup
icon = folium.Icon(color='green', icon="home") 
).add_to(Pangyo)


folium.Marker(
location=[37.397533327646194, 127.1138061397305],
tooltip = '투쁠등심', 
icon = folium.Icon(color='red', icon="bookmark")
).add_to(Pangyo)


folium.Marker(
location=[37.39668684244462, 127.10963913652753],
tooltip = '자산어보',
icon = folium.Icon(color='blue', icon="star")
).add_to(Pangyo)


folium.Marker(
location=[37.38973132656492, 127.11011120593834],
tooltip = '신도세기', 
icon = folium.Icon(color='orange', icon="flag") 
).add_to(Pangyo)
Pangyo

m = folium.Map(
location=[37.55760157264646, 126.92237620967263],
zoom_start=15
)

folium.CircleMarker(
location=[37.55760157264646, 126.92237620967263],
radius = 100,
color = '#3186cc',
fill_color='#3186cc',
tooltip = '동교동', 
).add_to(m)

folium.CircleMarker(
location=[37.55964192208533, 126.94302427522224],
radius = 100,
color = '#ffffgg',
fill_color='#fffggg',
tooltip = '신촌동', 
).add_to(m)

m

from folium import plugins
import numpy as np
import os

N = 100
data = np.array(
[
np.random.uniform(low=35, high=60, size=N),
np.random.uniform(low=-12, high=30, size=N),
]
).T
print(data[0:10])

popups = [str(i) for i in range(N)]

m = folium.Map([45, 3], zoom_start=4)
plugins.MarkerCluster(data,popups=popups).add_to(m)
m

N = 50
data = np.array(
[
np.random.uniform(low=34, high=38, size=N),
np.random.uniform(low=126, high=129, size=N),
]
).T
print(data[0:10])

popups = [str(i) for i in range(N)]

m = folium.Map([36, 128], zoom_start=5)
plugins.MarkerCluster(data,popups=popups).add_to(m)
m

N = 50
data = np.array(
[
np.random.uniform(low=35, high=38, size=N),
np.random.uniform(low=127, high=129, size=N),
]
).T
print(data[0:10])

popups = [str(i) for i in range(N)]

m = folium.Map([36, 128], zoom_start=5)
plugins.MarkerCluster(data,popups=popups).add_to(m)
m

"""### GeoJson 행정 구역 데이터"""

import folium
m = folium.Map(
location=[37.5838699,127.0565831],
zoom_start=10
)

import json
with open('seoul_muncipalities_geo.json',mode='rt',encoding='utf-8') as f:
  geo = json.loads(f.read())
  f.close()
folium.GeoJson(
    geo,
    name='seoul_municipalities'
).add_to(m)
m.save('map.html')
m

"""### 서울특별시 강남구 어린이 보호구역"""

import pandas as pd
Gangnam=pd.read_csv('seoul.csv',encoding='cp949')

Gangnam

A1=Gangnam.경도.min()

A2=Gangnam.경도.max()

B1=Gangnam.위도.min()

B2=Gangnam.위도.min()

length=len(Gangnam)

N = length

data = np.array(
[
np.random.uniform(low=B1, high=B2, size=N),
np.random.uniform(low=A1, high=A2, size=N),
]
).T
print(data[0:10])

popups = [str(i) for i in range(N)]

m = folium.Map([37.49701984561038, 127.06804545662564], zoom_start=10)
plugins.MarkerCluster(data,popups=popups).add_to(m)
m

m.save('Gangnam.html')

import os
path = os.getcwd()
os.listdir(path)

